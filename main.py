
# ----------------------------------------------------------------------------
# Imports 
# ----------------------------------------------------------------------------
from ngram_preprocessor import NgramPreprocessor
from detector import MalwareDetector
from pe_header_preprocessor import PeHeaderPreprocessor
import logging
import sys

# ----------------------------------------------------------------------------
# Globals
# ----------------------------------------------------------------------------

FEATURES_COUNT = 230 



# ----------------------------------------------------------------------------
# Functions 
# ----------------------------------------------------------------------------

def setup_logger():
	logging.getLogger().setLevel(logging.DEBUG)

	output_file_handler = logging.FileHandler("logs.log", 'w')
	stdout_handler = logging.StreamHandler(sys.stdout)
	
	formatter = logging.Formatter("%(asctime)s - %(name)s - %(levelname)s - %(funcName)s - %(message)s",  datefmt='%d-%m-%Y- %H:%M:%S')
	output_file_handler.setFormatter(formatter)
	stdout_handler.setFormatter(formatter)

	logging.getLogger().addHandler(output_file_handler)
	logging.getLogger().addHandler(stdout_handler)



def ngram_evaluation():
	preprocessor = NgramPreprocessor(FEATURES_COUNT)
	detector = MalwareDetector(FEATURES_COUNT)

	DATASET_PATH = 'output-datasets\\dikes_dataset_ngram.csv'  # microsoft_challenge_dataset_ngram.csv'

	preprocessor.process_all_files_in_dir('in-files\\benign', 'out-files\\benign', 'exe')
	preprocessor.process_all_files_in_dir('in-files\\malwares', 'out-files\\malwares', 'exe')

	preprocessor.extract_most_common_sequences('out-files\\malwares', 'most_common_sequences.csv')
	preprocessor.build_dataset('most_common_sequences.csv', 'out-files\\benign', 'out-files\\malwares', DATASET_PATH)
	
	detector.test_train_dataset(DATASET_PATH, 'RF')
	detector.test_train_dataset(DATASET_PATH, 'KNN')
	detector.test_train_dataset(DATASET_PATH, 'LR')
	detector.test_train_dataset(DATASET_PATH, 'SVM')



def main():
	setup_logger()
	logging.getLogger().debug('START')


	preprocessor = PeHeaderPreprocessor()
	#preprocessor.extract_api_calls_vector('in-files\\benign\\calc.exe')
	preprocessor.extract_most_common_api_functions_used('in-files\\test' , 'most_used_api_functions.csv')
	#ngram_evaluation()


if __name__ == '__main__':
	main()



"""
	
	N = 2

** TO EXTRACT FROM CSV:
	ngram_mat = np.genfromtxt('Teams.exe-ngram.csv' ,skip_header=True, dtype=str, delimiter=',')
	tfs =ngram_mat[:,N].astype(np.int32)
	opcodes = ngram_mat[:,0:N]


"""