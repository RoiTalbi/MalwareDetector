
# ----------------------------------------------------------------------------
# Imports 
# ----------------------------------------------------------------------------
from ngram_preprocessor import NgramPreprocessor
import logging
import sys

# ----------------------------------------------------------------------------
# Globals
# ----------------------------------------------------------------------------




def setup_logger():
	logging.getLogger().setLevel(logging.DEBUG)

	output_file_handler = logging.FileHandler("logs.log", 'w')
	stdout_handler = logging.StreamHandler(sys.stdout)
	
	formatter = logging.Formatter("%(asctime)s - %(name)s - %(levelname)s - %(funcName)s - %(message)s",  datefmt='%d-%m-%Y- %H:%M:%S')
	output_file_handler.setFormatter(formatter)
	stdout_handler.setFormatter(formatter)

	logging.getLogger().addHandler(output_file_handler)
	logging.getLogger().addHandler(stdout_handler)



def main():
	setup_logger()
	logging.getLogger().error('START')

	preprocessor = NgramPreprocessor()
	preprocessor.process_all_files_in_dir('in-files', 'out-files')
	#preprocessor.extract_ngram_of_file('in-files\\Teams.exe', 'out-files\\Teams.exe-ngram.csv')
	##preprocessor.extract_ngram_of_file('in-files\\calc.exe', 'out-files\\calc.exe-ngram.csv')







if __name__ == '__main__':
	main()



"""
	
	N = 2

** TO EXTRACT FROM CSV:
	ngram_mat = np.genfromtxt('Teams.exe-ngram.csv' ,skip_header=True, dtype=str, delimiter=',')
	tfs =ngram_mat[:,N].astype(np.int32)
	opcodes = ngram_mat[:,0:N]


"""